/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package addressbook18556;

import java.awt.HeadlessException;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Saba fatima
 */
public class MainFrame extends javax.swing.JFrame {
    
    RandomAccessFile file;
    Addressbook record=new Addressbook();


    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }
    
    public MainFrame(RandomAccessFile file){
        initComponents();
        this.file = file;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        label1 = new javax.swing.JLabel();
        label2 = new javax.swing.JLabel();
        label3 = new javax.swing.JLabel();
        label4 = new javax.swing.JLabel();
        label5 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        streetField = new javax.swing.JTextField();
        cityField = new javax.swing.JTextField();
        stateField = new javax.swing.JTextField();
        zipField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        AddBtn = new javax.swing.JButton();
        FirstBtn = new javax.swing.JButton();
        NextBtn = new javax.swing.JButton();
        PreviousBTn = new javax.swing.JButton();
        LastBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        label1.setText("Name:");

        label2.setText("Street:");

        label3.setText("City:");

        label4.setText("State:");

        label5.setText("Zip Code:");

        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });

        streetField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                streetFieldActionPerformed(evt);
            }
        });

        cityField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityFieldActionPerformed(evt);
            }
        });

        stateField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateFieldActionPerformed(evt);
            }
        });

        zipField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zipFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label2, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(stateField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(zipField, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE))
                    .addComponent(nameField)
                    .addComponent(streetField)
                    .addComponent(cityField))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameField))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(streetField, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cityField, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                    .addComponent(label3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stateField)
                    .addComponent(label5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(zipField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));

        AddBtn.setText("Add");
        AddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBtnActionPerformed(evt);
            }
        });

        FirstBtn.setText("First");
        FirstBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FirstBtnActionPerformed(evt);
            }
        });

        NextBtn.setText("Next");
        NextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextBtnActionPerformed(evt);
            }
        });

        PreviousBTn.setText("Previous");
        PreviousBTn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreviousBTnActionPerformed(evt);
            }
        });

        LastBtn.setText("Last");
        LastBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LastBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(AddBtn)
                .addGap(18, 18, 18)
                .addComponent(FirstBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(NextBtn)
                .addGap(18, 18, 18)
                .addComponent(PreviousBTn)
                .addGap(18, 18, 18)
                .addComponent(LastBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddBtn)
                    .addComponent(FirstBtn)
                    .addComponent(NextBtn)
                    .addComponent(PreviousBTn)
                    .addComponent(LastBtn))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void NextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextBtnActionPerformed
        try{
            if(file.length()==0){
                JOptionPane.showMessageDialog(null,"There are no records yet!", null, JOptionPane.PLAIN_MESSAGE);
            }
            
            else if(file.getFilePointer()!=file.length()){
                char[] temp1 = new char[20];
            for(int i=0;i<temp1.length;i++){
                temp1[i]=file.readChar();
                nameField.setText(String.valueOf(temp1));
            }
                
                char[] temp2 = new char[30];
            for(int i=0;i<temp2.length;i++){
                temp2[i]=file.readChar();
                streetField.setText(String.valueOf(temp2));
            }
            
            char[] temp3 = new char[15];
            for(int i=0;i<temp3.length;i++){
                temp3[i]=file.readChar();
                cityField.setText(String.valueOf(temp3));
            }
            
            char[] temp4 = new char[15];
            for(int i=0;i<temp4.length;i++){
                temp4[i]=file.readChar();
                stateField.setText(String.valueOf(temp4));
            }
            
            char[] temp5 = new char[5];
            for(int i=0;i<temp5.length;i++){
                temp5[i]=file.readChar();
                zipField.setText(String.valueOf(temp5));
            }
            }
            
            else if(file.getFilePointer()==file.length()){
                JOptionPane.showMessageDialog(null, "This is the last record", null, JOptionPane.PLAIN_MESSAGE);
            }
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_NextBtnActionPerformed

    private void LastBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LastBtnActionPerformed
        try {
            
            file.seek(file.length()-170);
            
            char[] temp1 = new char[20];
            for(int i=0;i<temp1.length;i++){
                temp1[i]=file.readChar();
                nameField.setText(String.valueOf(temp1));
            }
                
                char[] temp2 = new char[30];
            for(int i=0;i<temp2.length;i++){
                temp2[i]=file.readChar();
                streetField.setText(String.valueOf(temp2));
            }
            
            char[] temp3 = new char[15];
            for(int i=0;i<temp3.length;i++){
                temp3[i]=file.readChar();
                cityField.setText(String.valueOf(temp3));
            }
            
            char[] temp4 = new char[15];
            for(int i=0;i<temp4.length;i++){
                temp4[i]=file.readChar();
                stateField.setText(String.valueOf(temp4));
            }
            
            char[] temp5 = new char[5];
            for(int i=0;i<temp5.length;i++){
                temp5[i]=file.readChar();
                zipField.setText(String.valueOf(temp5));
            }
            
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_LastBtnActionPerformed

    private void streetFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_streetFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_streetFieldActionPerformed

    private void cityFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityFieldActionPerformed

    private void stateFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stateFieldActionPerformed

    private void zipFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zipFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_zipFieldActionPerformed

    private void AddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBtnActionPerformed
        try{
            file.seek(file.length());
            String name = nameField.getText();
            String street = streetField.getText();
            String city = cityField.getText();
            String state = stateField.getText();
            String zip = zipField.getText();
            
            if(nameField.getText().length()>20){
                JOptionPane.showMessageDialog(null," Enter your NAME ONLY","ERROR",JOptionPane.ERROR_MESSAGE);
            }
            
            else if(streetField.getText().length()>30){
               JOptionPane.showMessageDialog(null,"The Street info is too LONG","ERROR",JOptionPane.ERROR_MESSAGE);
            }
            
            else if(cityField.getText().length()>15){
                JOptionPane.showMessageDialog(null,"The City info is too LONG","ERROR",JOptionPane.ERROR_MESSAGE);
            }
            
            else if(stateField.getText().length()>15){
                JOptionPane.showMessageDialog(null,"The State info is too LONG", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            
            else if(zipField.getText().length()!=5){
                JOptionPane.showMessageDialog(null,"ZIP code is INCORRECT","ERROR",JOptionPane.ERROR_MESSAGE);
            }
            
            else{
                record.setName(name);
                record.setStreet(street);
                record.setCity(city);
                record.setState(state);
                record.setZip(zip);
                record.write(file);
                
                JOptionPane.showMessageDialog(null,"Record has been added successfully.","DONE",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        catch(HeadlessException | IOException e){
            System.out.println(e);
        }

    }//GEN-LAST:event_AddBtnActionPerformed

    private void FirstBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FirstBtnActionPerformed
        try {
            
            file.seek(0);
            
            char[] temp1 = new char[20];
            for(int i=0;i<temp1.length;i++){
                temp1[i]=file.readChar();
                nameField.setText(String.valueOf(temp1));
            }
                
                char[] temp2 = new char[30];
            for(int i=0;i<temp2.length;i++){
                temp2[i]=file.readChar();
                streetField.setText(String.valueOf(temp2));
            }
            
            char[] temp3 = new char[15];
            for(int i=0;i<temp3.length;i++){
                temp3[i]=file.readChar();
                cityField.setText(String.valueOf(temp3));
            }
            
            char[] temp4 = new char[15];
            for(int i=0;i<temp4.length;i++){
                temp4[i]=file.readChar();
                stateField.setText(String.valueOf(temp4));
            }
            
            char[] temp5 = new char[5];
            for(int i=0;i<temp5.length;i++){
                temp5[i]=file.readChar();
                zipField.setText(String.valueOf(temp5));
            }
            
            
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_FirstBtnActionPerformed

    private void PreviousBTnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PreviousBTnActionPerformed
        try {
            if(file.getFilePointer()==0){
                JOptionPane.showConfirmDialog(null, "There are no previous record", null,JOptionPane.PLAIN_MESSAGE);
            }
            
            else if(file.getFilePointer()!=170){
                file.seek(file.getFilePointer()-170);
                char[] temp1 = new char[20];
            for(int i=0;i<temp1.length;i++){
                temp1[i]=file.readChar();
                nameField.setText(String.valueOf(temp1));
            }
                
                char[] temp2 = new char[30];
            for(int i=0;i<temp2.length;i++){
                temp2[i]=file.readChar();
                streetField.setText(String.valueOf(temp2));
            }
            
            char[] temp3 = new char[15];
            for(int i=0;i<temp3.length;i++){
                temp3[i]=file.readChar();
                cityField.setText(String.valueOf(temp3));
            }
            
            char[] temp4 = new char[15];
            for(int i=0;i<temp4.length;i++){
                temp4[i]=file.readChar();
                stateField.setText(String.valueOf(temp4));
            }
            
            char[] temp5 = new char[5];
            for(int i=0;i<temp5.length;i++){
                temp5[i]=file.readChar();
                zipField.setText(String.valueOf(temp5));
            }
            }
            else if(file.getFilePointer()==170){
                JOptionPane.showMessageDialog(null,"This is the first record" , null, JOptionPane.PLAIN_MESSAGE);
            }
        } 
        catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_PreviousBTnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws FileNotFoundException {
        
        String filename = "randomAccessfile.txt";
        RandomAccessFile file = new RandomAccessFile(filename,"rw");
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame(file).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBtn;
    private javax.swing.JButton FirstBtn;
    private javax.swing.JButton LastBtn;
    private javax.swing.JButton NextBtn;
    private javax.swing.JButton PreviousBTn;
    private javax.swing.JTextField cityField;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel label1;
    private javax.swing.JLabel label2;
    private javax.swing.JLabel label3;
    private javax.swing.JLabel label4;
    private javax.swing.JLabel label5;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField stateField;
    private javax.swing.JTextField streetField;
    private javax.swing.JTextField zipField;
    // End of variables declaration//GEN-END:variables
}
